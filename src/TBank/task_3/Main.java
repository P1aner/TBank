package TBank.task_3;
/*
–í–∏–∫—Ç–æ—Ä–∏—è —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –∑–∞–Ω–∏–º–∞—Ç–µ–ª—å–Ω—É—é –∫–≤–∞–¥—Ä–∞—Ç–Ω—É—é –¥–≤—É–º–µ—Ä–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª. –û–Ω–∞ —Ç–æ –∏ –¥–µ–ª–æ —Å—É–º–º–∏—Ä—É–µ—Ç —á–∏—Å–ª–∞ –≤ —Å—Ç–æ–ª–±—Ü–∞—Ö –∏ —Å—Ç—Ä–æ–∫–∞—Ö. –í–∏–∫—Ç–æ—Ä–∏—è –Ω–∞–∑—ã–≤–∞–µ—Ç –ø–∞—Ä—É —Å—Ç—Ä–æ–∫–∏-—Å—Ç–æ–ª–±—Ü–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏, –µ—Å–ª–∏ —Å—É–º–º–∞ —á–∏—Å–µ–ª –≤ —Å—Ç—Ä–æ–∫–µ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Å—É–º–º—ã —á–∏—Å–µ–ª –≤ —Å—Ç–æ–ª–±—Ü–µ –Ω–µ –±–æ–ª–µ–µ —á–µ–º –Ω–∞ –≤–µ–ª–∏—á–∏–Ω—É —á–∏—Å–ª–∞ –Ω–∞ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–∏ —ç—Ç–∏—Ö —Å—Ç—Ä–æ–∫–∏ –∏ —Å—Ç–æ–ª–±—Ü–∞.
–ù–∞–π–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ø–∞—Ä —Å—Ç—Ä–æ–∫–∞-—Å—Ç–æ–ª–±–µ—Ü –≤–æ –≤—Å–µ–π –º–∞—Ç—Ä–∏—Ü–µ.
–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–í –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –¥–∞–Ω–æ —á–∏—Å–ª–æ ùëõn (1‚â§ùëõ‚â§1000)(1‚â§n‚â§1000) ‚Äî —Ä–∞–∑–º–µ—Ä –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã. –í –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö ùëõn —Å—Ç—Ä–æ–∫–∞—Ö –∑–∞–¥–∞–Ω–æ –æ–ø–∏—Å–∞–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü—ã –ø–æ ùëõn —Ü–µ–ª—ã—Ö –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª –≤ –∫–∞–∂–¥–æ–π. –≠–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü—ã ùëéùëñ,ùëóai,j –ª–µ–∂–∞—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 0‚â§ùëéùëñ,ùëó‚â§1050‚â§ai,j‚â§105.
–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–í—ã–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–∫–æ–º—ã—Ö –ø–∞—Ä.
–ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö

–ü—Ä–∏–º–µ—Ä 1
–í–≤–æ–¥:
2
1 9
0 5
–í—ã–≤–æ–¥: 1

–ü—Ä–∏–º–µ—Ä 2
–í–≤–æ–¥:
4
1 1 4 3
1 2 9 2
1 4 2 1
5 2 1 3
–í—ã–≤–æ–¥: 10

–ü—Ä–∏–º–µ—Ä 3
–í–≤–æ–¥:
4
0 0 0 0
0 1 1 0
0 1 1 0
1 1 1 0
–í—ã–≤–æ–¥: 7
 */
import java.util.Arrays;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (scanner.hasNext()) {
            int count = 0;
            int size = Integer.parseInt(scanner.nextLine());
            int[][] matrix = new int[size][size];
            long[] lineSum = new long[size];
            long[] columnSum = new long[size];
            for (int i = 0; i < size; i++) {
                int[] array = Arrays.stream(scanner.nextLine()
                                .split(" "))
                        .mapToInt(Integer::parseInt)
                        .toArray();
                lineSum[i] = Arrays.stream(array)
                        .sum();
                matrix[i] = array;
            }
            for (int i = 0; i < size; i++) {
                columnSum[i] = 0;
                for (int j = 0; j < size; j++) {
                    columnSum[i] += matrix[j][i];
                }
            }
            for (int i = 0; i < size; i++) {
                for (int j = 0; j < size; j++) {
                    if (Math.abs(columnSum[i] - lineSum[j]) <= matrix[i][j]) {
                        count++;
                    }
                }
            }
            System.out.println(count);
        }
    }
}
